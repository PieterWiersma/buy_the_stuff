[gd_scene load_steps=14 format=3 uid="uid://dg8yhobkc2qwa"]

[ext_resource type="Script" path="res://PlayerModel/player.gd" id="1_l5ucg"]
[ext_resource type="Shader" path="res://shaders/retro_glow.gdshader" id="2_tg25c"]
[ext_resource type="Script" path="res://PlayerModel/jump.gd" id="3_irm2x"]
[ext_resource type="Script" path="res://PlayerModel/animations.gd" id="3_jio8n"]
[ext_resource type="PackedScene" uid="uid://bsrof0qm15bef" path="res://PlayerModel/loader.tscn" id="5_yir65"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_bfnvb"]
size = Vector2(40, 40)

[sub_resource type="GDScript" id="GDScript_hi775"]
script/source = "extends ColorRect

var animation_time: float = 1
var player: Player

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	self.color.a = 0
	$Timer.wait_time = animation_time
	$Timer.start() 
	sync_position()
	if player:
		player.get_node('ColorRect').color.a = 0


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	
	self.color.a += 10 * delta
	sync_position()
	self.size.y += 1
	self.size.x += 1
	self.position.y += 0.5
	self.position.x += 0.5
	self.pivot_offset.x += 0.5
	self.pivot_offset.y += 0.5
	
	self.rotation_degrees -= 360 * delta

	if player:
		player.get_node('ColorRect').color.a += 0.1 * delta

func sync_position():
	if player:
		self.position.x = player.position.x - size.x / 2
		self.position.y = player.position.y - size.y / 2


func _on_timer_timeout() -> void:
	queue_free()
"

[sub_resource type="PackedScene" id="PackedScene_yxhf5"]
_bundled = {
"conn_count": 1,
"conns": PackedInt32Array(1, 0, 17, 16, 2, 0, 0),
"editable_instances": [],
"names": PackedStringArray("JumpEffect", "anchors_preset", "anchor_left", "anchor_top", "anchor_right", "anchor_bottom", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "grow_vertical", "pivot_offset", "script", "ColorRect", "Timer", "_on_timer_timeout", "timeout"),
"node_count": 2,
"node_paths": [],
"nodes": PackedInt32Array(-1, -1, 14, 0, -1, 13, 1, 0, 2, 1, 3, 1, 4, 1, 5, 1, 6, 2, 7, 2, 8, 3, 9, 3, 10, 4, 11, 4, 12, 5, 13, 6, 0, 0, 0, 15, 15, -1, 0, 0),
"variants": [8, 0.5, -10.0, 10.0, 2, Vector2(10, 10), SubResource("GDScript_hi775")],
"version": 3
}

[sub_resource type="ShaderMaterial" id="ShaderMaterial_61u3r"]
shader = ExtResource("2_tg25c")
shader_parameter/rect_size = Vector2(0.2, 0.2)
shader_parameter/bness = 0.3
shader_parameter/fall_off_scale = 3.52
shader_parameter/b_offset = -0.03

[sub_resource type="GDScript" id="GDScript_3g87r"]
script/source = "extends ColorRect

var player: Player

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	self.position.x = player.position.x - (player.size.x / 2) + 20
	self.position.y = player.position.y - (player.size.y / 2) + 20

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	# TODO figure out why + 20
	self.rotation_degrees -= 360 * delta
	self.position.x = player.position.x - (player.size.x / 2) + 20
	self.position.y = player.position.y - (player.size.y / 2) + 20


func _on_tree_exited() -> void:
	player.color_rect.show() # Replace with function body.
"

[sub_resource type="PackedScene" id="PackedScene_8kfq7"]
_bundled = {
"conn_count": 1,
"conns": PackedInt32Array(1073741824, 1073741825, 20, 21, 2, 0, 0),
"editable_instances": [],
"names": PackedStringArray("HoverAnimationBackground", "ColorRect", "z_index", "z_as_relative", "y_sort_enabled", "material", "anchors_preset", "anchor_left", "anchor_top", "anchor_right", "anchor_bottom", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "grow_vertical", "pivot_offset", "color", "script", "tree_exited", "_on_tree_exited"),
"node_count": 1,
"node_paths": [NodePath("."), NodePath(".")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 18, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 8, 6, 9, 7, 10, 8, 11, 9, 12, 10, 13, 11, 14, 12, 15, 13, 16, 14, 17, 15, 18, 16, 19, 17, 0),
"variants": [-1, false, true, SubResource("ShaderMaterial_61u3r"), 8, 0.5, 0.5, 0.5, 0.5, -60.0, -59.0, 60.0, 61.0, 2, 2, Vector2(60, 60), Color(0.241468, 7.56615e-05, 0.843682, 1), SubResource("GDScript_3g87r")],
"version": 3
}

[sub_resource type="GDScript" id="GDScript_jxi88"]
script/source = "extends Node

var game_settings = GameSettings.new()

var player: Player 
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4vcxh"]
shader = ExtResource("2_tg25c")
shader_parameter/rect_size = Vector2(0.12, 0.12)
shader_parameter/bness = 0.3
shader_parameter/fall_off_scale = 3.0
shader_parameter/b_offset = 0.0

[node name="Player" type="CharacterBody2D" groups=["gravity_affected"]]
position = Vector2(549, 587)
script = ExtResource("1_l5ucg")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
position = Vector2(0, 4)
shape = SubResource("RectangleShape2D_bfnvb")

[node name="EffectTimer" type="Timer" parent="."]
wait_time = 0.103
one_shot = true

[node name="Animations" type="Node" parent="."]
script = ExtResource("3_jio8n")
jump_effect = SubResource("PackedScene_yxhf5")
hover_effect = SubResource("PackedScene_8kfq7")

[node name="Jump" type="Node" parent="."]
script = ExtResource("3_irm2x")
loader = ExtResource("5_yir65")

[node name="InputDelay" type="Timer" parent="Jump"]
wait_time = 0.181
one_shot = true

[node name="HoverTimer" type="Timer" parent="Jump"]
one_shot = true

[node name="HoverTimerReset" type="Timer" parent="Jump"]
one_shot = true

[node name="Hover" type="Node" parent="."]
script = SubResource("GDScript_jxi88")

[node name="InputDelay" type="Timer" parent="Hover"]
wait_time = 0.105
one_shot = true

[node name="ColorRect" type="ColorRect" parent="."]
show_behind_parent = true
z_index = 1
z_as_relative = false
y_sort_enabled = true
material = SubResource("ShaderMaterial_4vcxh")
offset_left = -77.0
offset_top = -69.0
offset_right = 78.0
offset_bottom = 78.0
color = Color(0.670588, 0, 0, 1)

[connection signal="timeout" from="EffectTimer" to="Animations" method="_on_effect_timer_timeout"]
[connection signal="timeout" from="Jump/InputDelay" to="Jump" method="_on_jump_timer_timeout"]
[connection signal="timeout" from="Jump/HoverTimer" to="Jump" method="_on_hover_timer_timeout"]
[connection signal="timeout" from="Hover/InputDelay" to="Hover" method="_hover_start"]
